[{"/Users/imachd/Documents/Dev-Projects/React/task-tracker/src/index.js":"1","/Users/imachd/Documents/Dev-Projects/React/task-tracker/src/App.js":"2","/Users/imachd/Documents/Dev-Projects/React/task-tracker/src/reportWebVitals.js":"3","/Users/imachd/Documents/Dev-Projects/React/task-tracker/src/components/Button.js":"4","/Users/imachd/Documents/Dev-Projects/React/task-tracker/src/components/Header.js":"5","/Users/imachd/Documents/Dev-Projects/React/task-tracker/src/components/Tasks.js":"6","/Users/imachd/Documents/Dev-Projects/React/task-tracker/src/components/Task.js":"7","/Users/imachd/Documents/Dev-Projects/React/task-tracker/src/components/AddTask.js":"8","/Users/imachd/Documents/Dev-Projects/React/task-tracker/src/components/About.js":"9","/Users/imachd/Documents/Dev-Projects/React/task-tracker/src/components/Footer.js":"10"},{"size":500,"mtime":1611043500979,"results":"11","hashOfConfig":"12"},{"size":3612,"mtime":1611093687869,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1611043500980,"results":"14","hashOfConfig":"12"},{"size":294,"mtime":1611077224864,"results":"15","hashOfConfig":"12"},{"size":559,"mtime":1611081328973,"results":"16","hashOfConfig":"12"},{"size":388,"mtime":1611071992989,"results":"17","hashOfConfig":"12"},{"size":899,"mtime":1611057566921,"results":"18","hashOfConfig":"12"},{"size":2428,"mtime":1611080041835,"results":"19","hashOfConfig":"12"},{"size":201,"mtime":1611093292829,"results":"20","hashOfConfig":"12"},{"size":254,"mtime":1611093855396,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"qamp1",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/imachd/Documents/Dev-Projects/React/task-tracker/src/index.js",[],["50","51"],"/Users/imachd/Documents/Dev-Projects/React/task-tracker/src/App.js",["52"],"/Users/imachd/Documents/Dev-Projects/React/task-tracker/src/reportWebVitals.js",[],["53","54"],"/Users/imachd/Documents/Dev-Projects/React/task-tracker/src/components/Button.js",["55"],"import style from './button.css'\n\nconst Button = ({color,text,background,showTask}) => {\n    return (\n        <div>\n            <button className={'btn btn_add'} style={{color: color,background: background}} onClick={showTask}>{text}</button>\n        </div>\n    );\n};\n\n\n\nexport default Button;\n",["56","57"],"/Users/imachd/Documents/Dev-Projects/React/task-tracker/src/components/Header.js",["58","59","60"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from \"./Button\";\nimport style from './header.css'\nimport AddTask from \"./AddTask\";\nconst Header = ({showTask,showAddTask}) => {\n    return (\n        <div className='header'>\n            <div className='header_wrapper'> <h1>Task tracker</h1>\n                <Button color={'white'} text={showAddTask ? 'Close': 'Add'} background={showAddTask ? '#E70E02' : '#4CB944'} showTask={showTask}/>\n            </div>\n        </div>\n    );\n};\n\nHeader.propTypes = {\n\n};\n\nexport default Header;\n","/Users/imachd/Documents/Dev-Projects/React/task-tracker/src/components/Tasks.js",["61"],"import React from 'react';\nimport Task from \"./Task\";\nimport styles from './Tasks.css'\nconst Tasks = ({tasks,onRemove,onSetReminder}) => {\n    return (\n        <div className='tasks'>\n            {tasks.map((task,index)=> (\n                <Task task={task} key={index} onRemove={onRemove} onSetreminder={onSetReminder} />\n            ))}\n        </div>\n    );\n};\n\n\nexport default Tasks;\n","/Users/imachd/Documents/Dev-Projects/React/task-tracker/src/components/Task.js",["62"],"import React from 'react';\nimport styles from './Task.css'\nimport {FaTrash} from 'react-icons/fa'\n\nconst Task = ({task,onRemove,onSetreminder}) => {\n\n\n    return (\n        <div className='task'>\n            <ul>\n                <li className={task.reminder? 'active': ''}>\n                    <div>\n                        <h3>{task.text}</h3>\n                        <p>{task.date}</p>\n                        <div>\n                            <label htmlFor=\"reminder\">Reminder</label>\n                            <input type=\"checkbox\" id='reminder' checked={task.reminder}  onChange={(e)=> onSetreminder(task.id,e)} />\n                        </div>\n                    </div>\n                    <FaTrash style={{color: '#fff',cursor: 'pointer'}} onClick={()=> onRemove(task.id)}/>\n                </li>\n            </ul>\n\n        </div>\n    );\n};\n\nTask.propTypes =\n{\n\n};\n\nexport default Task;\n","/Users/imachd/Documents/Dev-Projects/React/task-tracker/src/components/AddTask.js",["63","64"],"import Button from \"./Button\";\nimport * as styles from './AddTask.css'\nimport {useState} from 'react'\n\nconst AddTask = ({onAdd}) => {\n    const [text, setText] = useState('')\n    const [date, setDate] = useState('')\n    const [textError,setTextError] = useState(false)\n    const [dateError,setDateError] = useState(false);\n    const [isDisable,setIsDisable] = useState(false);\n    const [reminder, setReminder] = useState(false)\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (!text) {\n            setTextError(true)\n        }else{\n            setTextError(false)\n        }\n        onAdd({text, date, reminder})\n        setText('')\n        setDate('')\n        setReminder(false);\n    }\n    const validateText = (e)=>{\n        setText(e.target.value);\n        e.target.value ? setTextError(false) : setTextError(true) ;\n        e.target.value ? setIsDisable(false) : setIsDisable(true)\n\n    }\n    const validateDate = (e)=> {\n        setDate(e.target.value);\n        e.target.value ? setDateError(false) : setDateError(true) && setIsDisable(true)\n        e.target.value ? setIsDisable(false) : setIsDisable(true)\n    }\n\n    return (\n        <form className='add_form' onSubmit={onSubmit}>\n            <div className=\"form_control\">\n                <label htmlFor=\"task\">Task</label>\n                <input type=\"text\" id='task' placeholder='Add task' value={text}\n                       onChange={(e) => validateText(e)}/>\n            </div>\n            {textError && <strong style={strongStyle}>This field is required</strong>}\n\n\n            <div className=\"form_control\">\n                <label htmlFor=\"date\">Date</label>\n                <input type=\"text\" id='date' placeholder='Add date' value={date}\n                       onChange={(e) => validateDate(e)}/>\n            </div>\n            {dateError && <strong style={strongStyle}>This field is required</strong>}\n\n\n            <div className=\"form_control\">\n                <label htmlFor=\"reminder\" className='reminder'>Reminder</label>\n                <input type=\"checkbox\" id='reminder' checked={reminder} placeholder='Add task' value={reminder}\n                       onChange={(e) => setReminder(e.target.checked)}/>\n            </div>\n            <button className='btn btn_add' disabled={isDisable}>Save Task</button>\n        </form>\n    );\n};\n\nAddTask.propTypes = {};\nconst strongStyle = {\n    color: '#E70E02'\n}\n\nexport default AddTask;\n\n","/Users/imachd/Documents/Dev-Projects/React/task-tracker/src/components/About.js",[],"/Users/imachd/Documents/Dev-Projects/React/task-tracker/src/components/Footer.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":63,"column":15,"nodeType":"71","messageId":"72","endLine":63,"endColumn":19},{"ruleId":"65","replacedBy":"73"},{"ruleId":"67","replacedBy":"74"},{"ruleId":"69","severity":1,"message":"75","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":13},{"ruleId":"65","replacedBy":"76"},{"ruleId":"67","replacedBy":"77"},{"ruleId":"69","severity":1,"message":"78","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":17},{"ruleId":"69","severity":1,"message":"75","line":4,"column":8,"nodeType":"71","messageId":"72","endLine":4,"endColumn":13},{"ruleId":"69","severity":1,"message":"79","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":15},{"ruleId":"69","severity":1,"message":"80","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":14},{"ruleId":"69","severity":1,"message":"80","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":14},{"ruleId":"69","severity":1,"message":"81","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":14},{"ruleId":"69","severity":1,"message":"80","line":2,"column":13,"nodeType":"71","messageId":"72","endLine":2,"endColumn":19},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar",["82"],["83"],"'style' is defined but never used.",["82"],["83"],"'PropTypes' is defined but never used.","'AddTask' is defined but never used.","'styles' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]